@using System.Globalization
@using System.Text
@using Hotello.Common
@using Hotello.Services.Expedia.Hotels.Models
@using Hotello.UI.Web.Helpers
@using Hotello.UI.Web.Models
@using Microsoft.Security.Application
@using PagedList

@model IPagedList<HotelSummary>

@{   
    
    ViewBag.Title = "Hotel Results";
    CultureInfo culture = new CultureInfo("en-GB");
    const string googleApiKey = "AIzaSyDm7lXUQTaEvPo-eghcFIo2VjJvyKawKUo";
    
}

<div class="well">
    
    <div class="row-fluid">
        
        <div class="span6">
            <h2 class="pull-left">Available Hotels
                <small>@Model.TotalItemCount results</small>
            </h2>
        </div>
        
        <div class="span6">
            @using (Html.BeginForm("Results", "Search", FormMethod.Get, new {@class = "form-search pull-right"}))
            {
                @Html.Hidden("SortOrder", ViewBag.SortOrder as string)
                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new {@class = "input-medium search-query", placeholder = "hotel name..."})
                <button class="btn btn-small btn-info" type="submit">Search</button>
            }
        </div>
    </div>
    
    <div class="row-fluid">
        <div class="pull-left">
            @Html.Partial("_pagination", Model)
        </div>
        <div class="pull-right">
            @Html.DropDownList("Sort", ResultsViewModel.ResultsOrderList)
        </div>
    </div>
    
    <!-- Results -->

    @foreach (var hotel in Model.OrEmptyIfNull())
    {         
        <!-- Result -->      
        <div class="hotel well" id="@hotel.HotelId" style="background-color: white">
            
            @Html.HiddenFor(modelItem => hotel.HotelId)
            @Html.HiddenFor(modelItem => hotel.Latitude)
            @Html.HiddenFor(modelItem => hotel.Longitude)
            @Html.HiddenFor(modelItem => Session["DestinationId"])

            <!-- Hotel Name and expedia star rating -->
            <div class="row-fluid">
                <div class="span6">
                    <span title="@hotel.HotelId"><b>@Server.HtmlDecode(hotel.Name)</b></span>
                    <div class="rateit" data-rateit-value="@hotel.HotelRating" data-rateit-min="0" data-rateit-ispreset="true" data-rateit-readonly="true"></div>
                </div>
                <div class="span6">
                    <h3 class="pull-right" style="margin-top: -10px; margin-bottom: -25px;">
                        <small>Averaging </small><span>@culture.NumberFormat.CurrencySymbol</span>@hotel.LowRate.ToString("0.##")<small> / night </small>
                    </h3>
                </div>
            </div>
            <br />

            <!-- Hotel Properties -->
            <div class="row-fluid">
                
                <!-- Thumbnail -->
                <div class="span1">
                    <img class="img-rounded" width="150" height="150" alt="Hotel Thumbnail" src="@string.Format(@"http://images.travelnow.com/{0}", hotel.ThumbNailUrl)" title="@hotel.HotelId" />
                    <p>
                        <a class="hide" href="@hotel.DeepLink">Deep Link</a>
                    </p>
                </div>
                
                <!-- Address -->
                <div class="span2">
                    <span class="label label-info">
                        <i class="icon-home"></i> Address
                    </span>
                    <span class="label label-info" title="Nearest Airport (IATA Code)">
                        <i class="icon-plane"></i> @hotel.AirportCode
                    </span>
                    <address>
                        @if (!string.IsNullOrEmpty(hotel.Address1))
                        {
                            @hotel.Address1<br />
                        }
                        @if (!string.IsNullOrEmpty(hotel.Address2))
                        {
                            @hotel.Address2<br />
                        }
                        @if (!string.IsNullOrEmpty(hotel.City))
                        {
                            @hotel.City<br />
                        }
                        @if (!string.IsNullOrEmpty(hotel.PostalCode))
                        {
                            @hotel.PostalCode<br />
                        }
                    </address>
                </div>
                
                <!-- Short Description -->
                <div class="span4">
                    <span class="label label-info">
                        <i class="icon-info-sign"></i> Summary
                    </span>
                   
                    @Html.Raw(Sanitizer.GetSafeHtmlFragment(Server.HtmlDecode(hotel.ShortDescription).Replace("<b>Location. </b>", string.Empty)))
                </div>
  
                <!-- Google Map -->
                <div class="span2">
                    <p>
                        @{
                            var url = new StringBuilder()
                                .Append("http://maps.googleapis.com/maps/api/staticmap?")
                                .Append(string.Format("center={0},{1}", hotel.Latitude, hotel.Longitude))
                                .Append(string.Format("&zoom=15&size=150x150&sensor=false"))
                                .Append(string.Format("&key={0}", googleApiKey))
                                .Append("&markers=").Append(Server.UrlEncode(string.Format("size:small|color:blue|{0},{1}", hotel.Latitude, hotel.Longitude)))
                                .ToString();
                        }

                        <img title="@hotel.Latitude,@hotel.Longitude" src="@url" alt="Google Map" class="img-rounded" height="150" width="150" />
                        <br />
                    </p>
                </div> 
                
                <div class="span2">
                    
                    <div class="row">
                        <!-- Hotel Amenities -->
                        <div class="pull-left">
                            <ul class="unstyled" style="margin-left: 10px;">
                                
                                @foreach (var amenity in hotel.Amenities.GetFlags())
                                {
                                    // Only the popular amenities, otherwise we end up listing to much crap
                                    switch (amenity)
                                    {
                                        case Amenities.Breakfast:
                                        case Amenities.FitnessCenter:
                                        case Amenities.FreeParking:
                                        case Amenities.IndoorPool:
                                        case Amenities.Internet:
                                        case Amenities.OutdoorPool:
                                        case Amenities.PetsAllowed:
                                        case Amenities.HandicappedParking:
                                        case Amenities.Restauraunt:
                                        case Amenities.BusinessCenter:
                                        case Amenities.Babysitting:
                                            {
                                                <li>
                                                    <!-- Amenity @amenity -->
                                                    <span><i class="icon-ok-sign"></i> @amenity.GetDescription()</span>
                                                </li>
                                            }
                                            break;
                                    }
                                }

                            </ul>
                        </div>                        
                    </div>
                </div>

            </div>
            
            <!-- Row -->
            <div class="row-fluid" style="margin-bottom: -10px">
                
                <div class="span12">
                    
                    <div class="span6">
                        <p class="distance">
                            <!-- ADDITIONAL -->
                        </p>
                    </div>
                    
                    <div class="span6">
                        <!-- HOTEL GALLERY AJAX CALL -->
                        <div class="buttons pull-right">

                            <a href="#gallery" data-toggle="modal" class="btn btn-mini btn-info">
                                Photo Gallery <i class="icon-camera"></i>
                                <input type="hidden" value="@hotel.HotelId" />
                            </a>
                            <!-- DETAILS LINK -->
                            @{
                                var route = new RouteValueDictionary
                                    {
                                        {"id", hotel.HotelId},
                                        {"name", hotel.Name.UrlFriendly()},
                                        {"city", hotel.City},
                                        {"country", hotel.CountryCode}
                                    };
                            }

                            <a href="@Url.Action("Information", "Hotels", route)" class="btn btn-mini btn-info">
                                <span>Hotel Details </span><i class="icon-arrow-right"></i>
                            </a>
                        </div>
                    </div>
                </div>   
            </div>
        </div>
    }

    <!-- End Hotel Results -->
    @Html.Partial("_pagination", Model)

</div>

<!-- HOTEL GALLERY MODAL -->
<div id="gallery" class="modal hide fade" tabindex="-1" role="dialog">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3>Hotel Gallery</h3>
    </div>
    <div class="modal-body">
        <div id="myCarousel" class="carousel slide">
            <div class="carousel-inner">
            </div>
            <a class="carousel-control left" href="#myCarousel" data-slide="prev">&lsaquo;</a>
            <a class="carousel-control right" href="#myCarousel" data-slide="next">&rsaquo;</a>
        </div>
        <p style="text-align: center">Note: It is the responsibility of the hotel to ensure accuracy of photos.</p>
    </div>
    <div class="modal-footer">
         
        <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
    </div>
   
</div>

@section Scripts {

    <script type="text/javascript">        

        $(document).ready(function() {

            // ----------------------------------------------------------------
            // Distance to Landmark -------------------------------------------
            // ----------------------------------------------------------------

            var hotelList = [];
            var destinationId = $(this).find('input[name="Session[DestinationId]"]').val();

            $(".hotel").each(function() {

                var hotel = {};
                hotel.HotelId = $(this).attr('id');
                hotel.Latitude = $(this).find('input[name="hotel.Latitude"]').val();
                hotel.Longitude = $(this).find('input[name="hotel.Longitude"]').val();
                hotelList.push(hotel);
                
            });

            calculateLandmarkDistance(hotelList, destinationId);

            function calculateLandmarkDistance(hotels, dest) {

                console.log("Ajax begin");

                $.ajax({
                    url: '@Url.Action("Index", "Distance", new {page = Model.PageNumber})',
                    type: 'POST',
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({
                            hotels: hotels,
                            destinationId: dest
                        }),
                    async: true,
                    success: function(data) {

                        console.log("Landmark: " + data.Landmark);

                        $.each(data.Hotels, function(index, item) {

                            console.log("hotel:" + item.HotelId);
                            console.log("Distance:" + item.Distance);

                            $('div#' + item.HotelId).find('p.distance').html('Distance to ' + data.Landmark + ' is ' + item.Distance);

                        });
                    },
                    error: function(msg) {

                        console.log("Error getting calculate distance to Landmark");
                    }
                });
            }

            // ----------------------------------------------------------------
            // Rate It --------------------------------------------------------
            // ----------------------------------------------------------------

            $('.rateit').rateit();

            var tooltipvalues = ['Economy', 'Moderate', 'First Class', 'Superior', 'Deluxe'];

            $.each($(".rateit"), function(index, item) {

                $(this).attr('title', tooltipvalues[$(item).rateit('value') - 1]);

            });

            // ----------------------------------------------------------------
            // Result sorting -------------------------------------------------
            // ----------------------------------------------------------------

            $('select#Sort').val($('input#SortOrder').val());

            $('select#Sort').change(function(e) {
                $('input#SortOrder').attr('value', $(this).val());
                $('form[method="get"]').submit();
            });            


            // ----------------------------------------------------------------
            // Hotel Image Gallery --------------------------------------------
            // ----------------------------------------------------------------


            // http://stackoverflow.com/questions/13391566/twitter-bootstrap-carousel-different-height-images-cause-bouncing-arrows            
            $("a[href='#gallery']").click(function() {

                $.ajax({
                    url: '@Url.Action("Images", "Hotels")',
                    type: 'GET',
                    dataType: 'json',
                    data: {
                        id: $(this).find('input[type="hidden"]').val()
                    },
                    success: function(data) {

                        $('.carousel-inner').html('');

                        $.map(data, function(item) {
                            var html =
                                "<div class='item hotel-image'>" +
                                    "<img alt='' title='" + item.name + "' src='" + item.Url + "' class='img-polaroid hotel-image' style='float:none; margin-left: auto; margin-right: auto;' />" +
                                    "<div class='carousel-caption'>" +
                                    "<h4>" + (item.caption != "" ? item.Caption : "") + "</h4>" +
                                    "</div>" +
                                    "</div>";

                            $('.carousel-inner').append(html);

                            $('.item').find('h4').each(function() {

                                if ($(this).val() === "") {

                                    $(this).parent('.carousel-caption').hide();

                                }
                            });
                        });

                        $('.carousel-inner div.item:first').attr('class', 'item active');
                        $('div#gallery').modal('show');
                        $('.carousel').carousel();
                    }
                });
            });
        });

    </script>

}